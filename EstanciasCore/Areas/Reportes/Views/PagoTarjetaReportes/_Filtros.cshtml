@{
    ViewData["Title"] = "Reporte de Pagos con Tarjeta";
}

<div class="box box-info">
    <div class="box-header with-border filtro-grilla">
        <span class="txt-titulo-box">Filtros</span>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="col-md-2">
                <div class="form-group">
                    <label for="fechaDesdeFiltro">Fecha Desde</label>
                    <input type="date" class="form-control" id="fechaDesdeFiltro" name="FechaDesde">
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label for="fechaHastaFiltro">Fecha Hasta</label>
                    <input type="date" class="form-control" id="fechaHastaFiltro" name="FechaHasta">
                </div>
            </div>
            <div class="form-group col-md-2">
                <label for="estadoFiltro">Estado:</label>
                <select class="form-control" id="estadoFiltro" name="EstadoId">
                    <option value="">Todos</option>
                    <option value="1">Pendiente</option>
                    <option value="2">Pagado</option>
                    <option value="3">Aprobado</option>
                    <option value="4">Rechazado</option>
                </select>
            </div>

            <div class="form-group col-md-3">
                <label>Cliente</label>
                <select-ajax title="Ingrese Nombre, Apellido o DNI"
                             class="form-control"
                             url="/Reportes/PagoTarjetaReportes/NombreApellidoComboJson"
                             width="100%"
                             name="PersonaId"
                             class-btn="btn-flat"
                             text-no-results="<h4 class='text-center'>El Cliente no está en el sistema.</h4>"></select-ajax>
            </div>

            <div class="col-md-1">
                <div class="form-group">
                    <label for="montoFiltro">Monto</label>
                    <input type="text" class="form-control" id="montoFiltro" name="Monto">
                </div>
            </div>
            <div class="form-group col-md-2" style="padding-top: 25px;">
                <button class="btn bg-orange btn-sm" id="botonFiltrarReporte">
                    <i class="fa fa-search"><span class="hidden-xs"> Filtrar</span></i>
                </button>
                <a class="btn btn-danger btn-sm" id="botonLimpiarFiltro" href="javascript:void(0);" style="margin-left: 5px;">
                    <i class="fa fa-undo"><span class="hidden-xs"> Limpiar</span></i>
                </a>
            </div>
        </div>
    </div>
</div>
<div class="box">
    <div class="box-header with-border filtro-grilla">
        <span class="txt-titulo-box">Listado de Comprobantes</span>
        <div class="input-group input-group-sm pull-right" style="max-width: 900px;    min-width: 200px;">
            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fa fa-download"></i> <span class="hidden-xs">Exportar</span> <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li><a href="#" class="export-link" data-format="xlsx">Exportar a Excel (.xlsx)</a></li>
                    <li><a href="#" class="export-link" data-format="csv">Exportar a CSV (.csv)</a></li>
                    <li><a href="#" class="export-link" data-format="txt">Exportar a Texto (.txt)</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="box-body">
        <table id="tablaPagos" class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>Cliente</th>
                    <th>Nro Documento</th>
                    <th>Fecha Vencimiento</th>
                    <th>Fecha Comprobante</th>
                    <th>Estado</th>
                    <th>Monto Adeudado</th>
                    <th>Monto Informado</th>
                    <th>Acciones</th> 
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>

<modal title="Ver Comprobante" callback-modal="true" function="VerComprobante" load-url="/Core/PagoTarjeta/_VerComprobante/" size="Large"></modal>

<script>
    $(document).ready(function () {

        const hoy = new Date();
        const anio = hoy.getFullYear();
        // JavaScript cuenta los meses de 0 a 11, por eso se suma 1.
        // .padStart(2, '0') asegura que tenga dos dígitos (ej: '08' en lugar de '8').
        const mes = String(hoy.getMonth() + 1).padStart(2, '0');
        const dia = String(hoy.getDate()).padStart(2, '0');
        const fechaDeHoy = `${anio}-${mes}-${dia}`;

        // 2. Establecer la fecha de hoy en los campos de filtro
        $('#fechaDesdeFiltro').val(fechaDeHoy);
        $('#fechaHastaFiltro').val(fechaDeHoy);


        var tabla = $('#tablaPagos').DataTable({
            "processing": true,
            "serverSide": true, 
            "order": [[ 3, 'desc' ]],
            "ajax": {
                "url": "/Reportes/PagoTarjetaReportes/FiltrarPagosTarjeta",
                "type": "POST",
                "dataType": "json",
                "data": function (d) {
                    d.FechaDesde = $('#fechaDesdeFiltro').val();
                    d.FechaHasta = $('#fechaHastaFiltro').val();
                    d.EstadoId = $('#estadoFiltro').val();
                    d.PersonaId = $('select[name="PersonaId"]').val();
                    d.Monto = $('#montoFiltro').val();
                },
                "error": function (xhr, error, thrown) {
                    alert("Error al cargar los datos. Por favor, intente de nuevo.");
                }
            },
            "columns": [                
                 {
                    "data": "persona.apellido",
                    "name": "Persona.Apellido",
                    "render": function (data, type, row) {
                        return row.Persona.Apellido;
                    }
                },
                 {
                    "data": "persona.NroDocumento",
                    "name": "Persona.NroDocumento",
                    "render": function (data, type, row) {
                        return row.Persona.NroDocumento;
                    }
                 },
                {
                    "data": "FechaVencimiento",
                    "name": "FechaVencimiento",
                    "render": function (data) {
                        if (data) {
                            return new Date(data).toLocaleDateString('es-AR');
                        }
                        return "";
                    }
                },
                {
                    "data": "FechaComprobante",
                    "name": "FechaComprobante",
                    "render": function (data) {
                        if (data) {
                            return new Date(data).toLocaleDateString('es-AR');
                        }
                        return "";
                    }
                },
                {
                    "data": "EstadoPago",
                    "name": "EstadoPago",
                    "render": function(data) {
                        let etiquetaHtml = '';
                        switch (data) {
                            case 1: // Asumiendo que 1 es Pendiente
                                etiquetaHtml = '<small class="label bg-yellow">Pendiente</small>';
                                break;
                            case 2: // Asumiendo que 2 es Pagado
                                etiquetaHtml = '<small class="label bg-blue">Pagado</small>';
                                break;
                            case 3: // Asumiendo que 3 es Aprobado
                                etiquetaHtml = '<small class="label bg-green">Aprobado</small>';
                                break;
                            case 4: // Asumiendo que 4 es Rechazado
                                etiquetaHtml = '<small class="label bg-red">Rechazado</small>';
                                break;
                            default:
                                etiquetaHtml = '<small class="label bg-gray">Desconocido</small>';
                                break;
                        }
                        return etiquetaHtml;
                    }
                },
                {
                    "data": "MontoAdeudado",
                    "name": "MontoAdeudado",
                   "render": function(data) {
                        if (data == null || isNaN(data)) {
                            return '—';
                        }
                        const formatter = new Intl.NumberFormat('es-AR', {
                            style: 'currency',
                            currency: 'ARS',
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                        return formatter.format(data);
                    }
                },
                {
                   "data": "MontoInformado",
                   "name": "MontoInformado",
                   "render": function(data) {
                        if (data == null || isNaN(data)) {
                            return '—';
                        }
                        const formatter = new Intl.NumberFormat('es-AR', {
                            style: 'currency',
                            currency: 'ARS',
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2
                        });
                        return formatter.format(data);
                    }
                },
                {
                    "data": null,
                    "orderable": false,
                    "render": function (data, type, row) {
                        if(row.EstadoPago!=1){
                            return ` <a onclick="VerComprobante('${row.Id}')" title="Ver Comprobante" class="btn btn-warning btn-xs"><i class="fa fa-file-photo-o"></i></a>`;
                        }else{
                            return "";
                        }
                    }
                }
            ],
            // Traducción al español
            "language": {
                "url": "//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json"
            }
        });

        $('#botonFiltrarReporte').on('click', function (e) {
            e.preventDefault();
            tabla.ajax.reload();
        });

        $("#botonLimpiarFiltro").on("click", function () {
            $("#fechaDesdeFiltro").val('');
            $("#fechaHastaFiltro").val('');
            $("#estadoFiltro").val('');
            $("#montoFiltro").val('');

            $('select[name="PersonaId"]').val(null).trigger('change');

            tabla.ajax.reload();
        });

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        $('.export-link').on('click', function(e) {
            e.preventDefault();

            // Obtenemos el formato deseado (xlsx, csv, o txt)
            var format = $(this).data('format');

            // Recolectamos los valores actuales de los filtros
            var params = {
                FechaDesde: $('#fechaDesdeFiltro').val(),
                FechaHasta: $('#fechaHastaFiltro').val(),
                EstadoId: $('#estadoFiltro').val(),
                PersonaId: $('select[name="PersonaId"]').val(),
                Monto: $('#montoFiltro').val(),
                formato: format // Añadimos el formato a los parámetros
            };

            // Construimos la URL con los parámetros
            var url = "/Reportes/PagoTarjetaReportes/Exportar?" + $.param(params);

            // Redirigimos para que comience la descarga
            window.location.href = url;
        });
    });
</script>